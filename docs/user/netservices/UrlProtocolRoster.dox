/*
 * Copyright 2020 Haiku, Inc. All rights reserved.
 * Distributed under the terms of the MIT License.
 *
 * Authors:
 *		Leorize, leorize+oss@disroot.org
 *
 * Corresponds to:
 *		headers/private/netservices/UrlProtocolRoster.h			hrev54923
 *		src/kits/network/libnetservices/UrlProtocolRoster.cpp	hrev54923
 */


/*!
	\file UrlProtocolRoster.h
	\ingroup netservices
	\brief Provides the BUrlProtocolRoster interface.
*/


/*!
	\class BPrivate::Network::BUrlProtocolRoster
	\ingroup netservices
	\brief Interfaces for protocol-agnostic operations.
*/


/*!
	\fn static BUrlRequest* BUrlProtocolRoster::MakeRequest(const BUrl& url,
		BDataIO* output, BUrlProtocolListener* listener = NULL,
		BUrlContext* context = NULL)
	\brief Create a BUrlRequest that can handle the given BUrl

	\param url The URL to create a request for
	\param output The BDataIO to output to
	\param listener The BUrlProtocolListener to be registered with the created
		BUrlRequest, can be \c NULL
	\param context The BUrlContext to be registered with the created
		BUrlRequest, can be \c NULL

	\returns A pointer to the BUrlRequest that can handle the given BUrl.
		\c NULL will be returned if there aren't any BUrlRequest that can
		handle the given protocol or if memory couldn't be allocated.
*/
